SET TERM ^ ;

CREATE TRIGGER ATUALIZA_ESTOQUE FOR MOVIMENTODETALHE
ACTIVE AFTER UPDATE OR DELETE POSITION 0
AS 
DECLARE variable DTAMOV DATE;
DECLARE variable CCUSTO INTEGER;
DECLARE variable CODPROD INTEGER;
DECLARE variable BAIXAMOV smallint;
BEGIN 
  IF (((deleting) and (old.BAIXA is not null)) OR ((updating) and (new.BAIXA is not null))) then
  begin  
	/* RODA O ATUALIZA ESTOQUE */
	SELECT M.DATAMOVIMENTO, M.CODALMOXARIFADO, NOP.BAIXAMOVIMENTO 
	  FROM MOVIMENTO M, NATUREZAOPERACAO NOP 
     WHERE M.CODNATUREZA = NOP.CODNATUREZA
       AND CODMOVIMENTO = OLD.CODMOVIMENTO 
     into :DTAMOV, :CCUSTO, :BAIXAMOV;
	FOR SELECT * FROM ESTOQUE_VIEW(:DTAMOV, OLD.CODPRODUTO
      :CCUSTO, 'TODOS OS LOTES CADASTRADOS NO SISTEMA') 
    DO BEGIN
      SELECT EM.CODPRODUTO FROM ESTOQUEMES EM 
       WHERE EM.CODPRODUTO = :OLD.CODPRODUTO
         AND EM.MESANO = '01/01/2001'
         AND EM.CENTROCUSTO = :CCUSTO
          --AND EM.LOTE   = OLD.LOTE
        INTO :CODPROD;
        IF (CODPROD IS NULL) THEN 
          CODPROD = 0;  
          
        select ev. from ESTOQUE_VIEW('01/01/2001', :OLD.CODPRODUTO, :CCUSTO, 'TODOS OS LOTES CADASTRADOS NO SISTEMA') ev   
          
        IF (CODPROD = 0) THEN 
        BEGIN 
          IF (:BAIXAMOV = 0) THEN  
          INSERT INTO ESTOQUEMES (CODPRODUTO, LOTE, MESANO, PRECOCUSTO, PRECOCOMPRA, PRECOCOMPRAULTIMA, PRECOVENDA, CENTROCUSTO, QTDEDEVVENDA, QTDEINVENTARIO, SALDOMESANTERIOR, DATAVENCIMENTO, DATAFABRICACAO)
            VALUES (OLD.CODPRODUTO, OLD.LOTE, '01/01/2001', 
        END 
        IF (CODPROD > 0) THEN 
        BEGIN 
        END 
        CODPROD = NULL;     
        
    END
  end -- if inicial     
END^

SET TERM ; ^ 
